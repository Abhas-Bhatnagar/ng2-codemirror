{"version":3,"sources":["Codemirror.es6"],"names":["CodemirrorComponent","selector","providers","provide","useExisting","multi","template","_value","config","codemirrorInit","instance","fromTextArea","host","nativeElement","setValue","on","updateValue","getValue","value","onChange","onTouched","change","emit","_","fn","v","CodemirrorModule","declarations","exports"],"mappings":";;;;;;;;;oJAAA;;;AACA;;AAUA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;IAgBaA,mB,WAAAA,mB,WAXZ,qBAAU;AACTC,YAAU,YADD;AAETC,aAAW,CACT;AACEC,qCADF;AAEEC,iBAAa,sBAAW;AAAA,aAAMJ,mBAAN;AAAA,KAAX,CAFf;AAGEK,WAAO;AAHT,GADS,CAFF;AASTC;AATS,CAAV,C,UAaE,kB,UAEA,mB,UAEA,qBAAU,MAAV,C,UAEA,mB,UAWA,kB;;AAPD;;;AAGA,iCAAa;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SALbC,MAKa,GALJ,EAKI;AAAE;;;;;;AAWf;;;kCAGa,CAEZ;;AAED;;;;;;sCAGiB;AACf,WAAKC,MAAL,GAAc,KAAKA,MAAL,IAAe,EAA7B;AACA,WAAKC,cAAL,CAAoB,KAAKD,MAAzB;AACD;;AAED;;;;;;mCAGeA,M,EAAO;AAAA;;AACpB,WAAKE,QAAL,GAAgB,qBAAWC,YAAX,CAAwB,KAAKC,IAAL,CAAUC,aAAlC,EAAiDL,MAAjD,CAAhB;AACA,WAAKE,QAAL,CAAcI,QAAd,CAAuB,KAAKP,MAA5B;AACA,WAAKG,QAAL,CAAcK,EAAd,CAAiB,QAAjB,EAA2B,YAAM;AAC/B,cAAKC,WAAL,CAAiB,MAAKN,QAAL,CAAcO,QAAd,EAAjB;AACD,OAFD;AAGD;;AAED;;;;;;gCAGYC,K,EAAM;AAChB,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKC,QAAL,CAAcD,KAAd;AACA,WAAKE,SAAL;AACA,WAAKC,MAAL,CAAYC,IAAZ,CAAiBJ,KAAjB;AACD;;AAED;;;;;;+BAGWA,K,EAAM;AACf,WAAKX,MAAL,GAAcW,SAAS,EAAvB;AACA,UAAI,KAAKR,QAAT,EAAmB;AACjB,aAAKA,QAAL,CAAcI,QAAd,CAAuB,KAAKP,MAA5B;AACD;AACF;;;6BACQgB,C,EAAE,CAAE;;;gCACF,CAAE;;;qCACIC,E,EAAG;AAAC,WAAKL,QAAL,GAAgBK,EAAhB;AAAoB;;;sCACvBA,E,EAAG;AAAC,WAAKJ,SAAL,GAAiBI,EAAjB;AAAqB;;;wBAzD/B;AAAE,aAAO,KAAKjB,MAAZ;AAAqB,K;sBAEhBkB,C,EAAG;AACpB,UAAIA,MAAM,KAAKlB,MAAf,EAAuB;AACrB,aAAKA,MAAL,GAAckB,CAAd;AACA,aAAKN,QAAL,CAAcM,CAAd;AACD;AACF;;;;;;;gBAtBQjB,M;;;;;WAEU,wB;;;;;gBAEAI,I;;;;;WAEE,I;;;;AAqEvB;;;;IAWac,gB,WAAAA,gB,YARZ,oBAAS;AACRC,gBAAc,CACZ3B,mBADY,CADN;AAIR4B,WAAS,CACP5B,mBADO;AAJD,CAAT,C","file":"Codemirror.js","sourcesContent":["// Imports\nimport {\n  NgModule,\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  forwardRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport CodeMirror from 'codemirror';\n\n/**\n * CodeMirror component\n * Usage :\n * <codemirror [(ngModel)]=\"data\" [config]=\"{...}\"></codemirror>\n */\n@Component({\n  selector: 'codemirror',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CodemirrorComponent),\n      multi: true\n    }\n  ],\n  template: `<textarea #host></textarea>`,\n})\nexport class CodemirrorComponent {\n\n  @Input() config;\n\n  @Output() change = new EventEmitter();\n\n  @ViewChild('host') host;\n\n  @Output() instance = null;\n\n  _value = '';\n\n  /**\n   * Constructor\n   */\n  constructor(){}\n\n  get value() { return this._value; };\n\n  @Input() set value(v) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  /**\n   * On component destroy\n   */\n  ngOnDestroy(){\n\n  }\n\n  /**\n   * On component view init\n   */\n  ngAfterViewInit(){\n    this.config = this.config || {};\n    this.codemirrorInit(this.config);\n  }\n\n  /**\n   * Initialize codemirror\n   */\n  codemirrorInit(config){\n    this.instance = CodeMirror.fromTextArea(this.host.nativeElement, config);\n    this.instance.setValue(this._value);\n    this.instance.on('change', () => {\n      this.updateValue(this.instance.getValue());\n    });\n  }\n\n  /**\n   * Value update process\n   */\n  updateValue(value){\n    this.value = value;\n    this.onChange(value);\n    this.onTouched();\n    this.change.emit(value);\n  }\n\n  /**\n   * Implements ControlValueAccessor\n   */\n  writeValue(value){\n    this._value = value || '';\n    if (this.instance) {\n      this.instance.setValue(this._value);\n    }\n  }\n  onChange(_){}\n  onTouched(){}\n  registerOnChange(fn){this.onChange = fn;}\n  registerOnTouched(fn){this.onTouched = fn;}\n}\n\n/**\n * CodemirrorModule\n */\n@NgModule({\n  declarations: [\n    CodemirrorComponent,\n  ],\n  exports: [\n    CodemirrorComponent,\n  ]\n})\nexport class CodemirrorModule{}\n"]}